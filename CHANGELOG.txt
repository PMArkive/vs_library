
'vs_library' changelog in reverse chronological order.

--------------------------------

2020-07-04 [v2.36.8]
- Added VS.Events.ValidateUseridAll()

2020-06-22 [v2.36.7]
- Minor change: create object only when needed,
  not on initialisation where it may not even ever be used

2020-06-09 [v2.36.6]
- Added ForceValidateUserid to base (vs_library.nut)
- Removed AddEventCallback

2020-05-28
- Changes in math2, interp, collision:
  - Commented out some broken functions.
  - Merged some matrix functions to have optional position parameter.
  - Added checks to prevent loading if already loaded.

2020-05-26 [v2.36.5]
- Minor performance improvements

2020-05-21 [v2.36.4]
- Added AddEventCallback
- Bugfix on glow.nut

2020-05-11 [v2.36.3]
- Changed CreateTimer parameters to be consistent with Timer parameters. Removed targetname param
- AddOutput (by extension Timer and OnTimer as well) now accepts null function input
- Removed SetKeyInt, SetKeyFloat, SetKeyString and SetKeyVector functions.
- Minor performance improvements
- Bugfix on glow.nut

2020-05-05 [v2.36.2]
- Fixed a wrong constant value
- Removed misplaced garbage collection
- Bugfix on IsLookingAt, bug only present in the minified version

2020-04-27 [v2.36.1]
- Bugfixes on force userid validation
- Minor improvements on DumpEnt and DumpPlayers, fix on DumpScope
- Removed GetInfo, GetTableName, GetFuncName, FindTableByName
- Improved GetVarName, GetTableDir, (added) FindVarByName

2020-04-25 [v2.36.0]
- CreateEntity:
  - Removed the targetname parameter; it should be handled in the KV table
  - Added a 'make permanent' parameter
- Added 'make permanent' parameters on Timer and CreateTimer
- Removed CreateGameText and CreateHudHint. They can be replaced with:
    VS.CreateEntity("game_text",{})
    VS.CreateEntity("env_hudhint",{message = "initial msg"})
- Added ShowGameText, works the same as ShowHudHint (set msg, display)
- Passing SetKey a null value now skips that key
- Improved GetCaller and GetCallerFunc
- Removed SetAngles
- Removed traces of previously removed functions (IsLengthGreaterThan, IsLengthLessThan).
- Bugfixes on force userid validation

2020-04-20 [v2.35.3]
- AddOutput now accepts function parameters using a more efficient method than AddOutput2
- Removed OnTimerHigh and OnTimerLow
- Fix VectorCopy not returning, bug only present in the minified version.
- Fix SetKey wrapper functions not returning

2020-04-14
- glow.nut: Removed IsPointSized check

2020-04-10 [v2.35.2]
- Edge case fix on events
- ENT_SCRIPT is no longer chosen as an already existing logic_script entity.
    This gives the user more control, and fixes some issues.
- Changed VS.FormatWidth parameters to be consistent with the other format functions.
- Removed default parameter values on the format functions.
- Minor improvements
- glow.nut:
  - Added variable 'DEBUG' for console output
  - Added entity indices on console output

2020-04-09
- glow.nut: Changed the method of storage.

2020-04-08
- Added glow library. Not included in vs_library.

2020-04-06 [v2.35.1]
- Removed traces of previously removed functions (toRad, toDeg).
- Changed the local player's targetname to "localplayer" from "player".
- Minor improvements

2020-03-26 [v2.35.0]
- Removed default naming for script created entities to improve resource usage, and give the user more control.
- Removed VS.IsLengthGreaterThan and VS.IsLengthLessThan functions.
- AddOutput2 bugfix
- Reverted all EntFire changes.
- vs_log:
  - Added an option to export non-unique file names
  - Removed encryption options
  - Simplified internal functions

2020-03-08 [v2.34.8]
- Minor change to EntFire to function the same as before

2020-02-15 [v2.34.7]
- ???

2020-02-09 [v2.34.5]
- Minor fixes on events and GetLocalPlayer

2020-02-09 [v2.34.4]
- Removed the 'validated' parameters of GetPlayersAndBots and DumpPlayers
- Removed EntFireHandle
- Minor bug fix

2020-02-04
- vs_interp:
  - Added Catmull-Rom quaternion interpolation methods

2020-02-04 [v2.34.2]
- Modified VS.CreateMeasure to use less resources, added new parameters, changed return type.
- Added error check on VS.Timer

2020-02-01 [v2.34.1]
- Corrected VS.arrayFind parameters
- Added a parameter for making entities permanent in VS.CreateMeasure

2020-01-31 [v2.34.0]
- Documentation released
- Cleanup, various improvements and bugfixes
- Added error checks on events
- VS.AddOutput, VS.OnTimer, VS.Timer functions now accept function inputs as well as string
  - Improved performance
- Removed VS.ChangeName, VS.GetAllPlayers parameter, VS.Log.Array, VS.TraceLine.GetFraction, VS.ReplaceArrayIndex, VS.FindEntityGeneric
- Renamed FindInArray to arrayFind to be consistent with the other array functions

2020-01-24 [v2.33.1]
- Cleanup, improved performance

2020-01-23 [v2.33.0]
- Implemented auto userid validation. VS.ValidateUserid functions are removed.
- ChatTeam bugfix

2020-01-22 [v2.32.4]
- Allow EntFire to be able to pass a caller
- Make EntFireByHandle function the same as EntFireHandle, with default parameters. The native function is
  accessible with DoEntFireByInstanceHandle, naming is consistent with the engine function.

2020-01-20 [v2.32.3]
- Cleanup, no changes

2020-01-19 [v2.32.3]
- Changed license to MIT
- Removed VS.Storage

...

2019-01-26 []
- Initial public release

2016..2017 []
- Private development

--------------------------------
